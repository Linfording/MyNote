MongoDB初窥
1.简介:
	MongoDB  是一个基于分布式文件存储的数据库。
	MongoDB  是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。
	他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。
	Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。

2.MongoDB特点:
	a.面向集合的存储：适合存储对象及JSON形式的数据。
	b.动态查询：mongo支持丰富的查询表达方式，查询指令使用JSON形式的标记，可轻易查询文档中的内嵌的对象及数组。
	c.完整的索引支持:包括文档内嵌对象及数组。mongo的查询优化器会分析查询表达式，并生成一个高效的查询计划。
	d.查询监视：mongo包含一个监视工具用于分析数据库操作性能。
	e.复制及自动故障转移：mongo数据库支持服务器之间的数据复制，支持主-从模式及服务器之间的相互复制。复制的主要目的是提供冗余及自动故障转移。
	f.高效的传统存储方式：支持二进制数据及大型对象（如照片或图片）。
	g.自动分片以支持云级别的伸缩性：自动分片功能支持水平的数据库集群，可动态添加额外的机器。
	
2.三大特性:
	灵活文档模型 + 高可用复制集 + 可扩展分片集群
	
3.业务场景:
	1.Web应用程序。文档能表示丰富的数据结构，建模相同数据库所需的集合数量通常会比使用完全正规化关系型数据库的数据表数量要少。动态查询和二级索引能让你轻松的实现SQL开发者所熟悉的大多数查询。作为一个成长中的Web应用程序，MongoDB提供了清晰的扩展路线。
    2.敏捷开发。MongoDB没有固定的Schema，所有花在提交、沟通和实施Schema变更的时间都生下来了。
    3.分析和日志。MongoDB的目标原子更新和固定集合。
    4.缓存
    5.可变Schema

	mongodb的主要目标是在键/值存储方式（提供了高性能和高度伸缩性）以及传统的RDBMS系统（丰富的功能）架起一座桥梁,集两者的优势于一身。mongo适用于以下场景:
	a.网站数据:mongo非常适合实时的插入,更新与查询,并具备网站实时数据存储所需的复制及高度伸缩性。
	b.缓存:由于性能很高,mongo也适合作为信息基础设施的缓存层。在系统重启之后,由mongo搭建的持久化缓存可以避免下层的数据源过载。
	c.大尺寸、低价值的数据:使用传统的关系数据库存储一些数据时可能会比较贵,在此之前,很多程序员往往会选择传统的文件进行存储。
	d.高伸缩性的场景:mongo非常适合由数十或者数百台服务器组成的数据库。
	e.用于对象及JSON数据的存储:mongo的BSON数据格式非常适合文档格式化的存储及查询。

	讨论 MongoDB 业务场景时，会听到类似『你这个场景 mysql 也能解决，没必要一定用 MongoDB』的声音，的确，并没有某个业务场景必须要使用 MongoDB才能解决，但使用 MongoDB 通常能让你以更低的成本解决问题（包括学习、开发、运维等成本），下面是 MongoDB 的主要特性，大家可以对照自己的业务需求看看，匹配的越多，用 MongoDB 就越合适。
	MongoDB 特性优势事务支持MongoDB 目前只支持单文档事务，需要复杂事务支持的场景暂时不适合灵活的文档模型JSON 格式存储最接近真实对象模型，对开发者友好，方便快速开发迭代高可用复制集满足数据高可靠、服务高可用的需求，运维简单，故障自动切换可扩展分片集群海量数据存储，服务能力水平扩展高性能mmapv1、wiredtiger、mongorocks（rocksdb）、in-memory 等多引擎支持满足各种场景需求强大的索引支持地理位置索引可用于构建 各种 O2O 应用、文本索引解决搜索的需求、TTL索引解决历史数据自动过期的需求Gridfs解决文件存储的需求aggregation & mapreduce解决数据分析场景需求，用户可以自己写查询语句或脚本，将请求都分发到 MongoDB 上完成
	如果你还在为是否应该使用 MongoDB，不如来做几个选择题来辅助决策:
	应用特征Yes / No应用
	不需要事务及复杂 join 支持,必须 Yes
	新应用，需求会变，数据模型无法确定，想快速迭代开发?
	应用需要2000-3000以上的读写QPS（更高也可以）?
	应用需要TB甚至 PB 级别数据存储?
	应用发展迅速，需要能快速水平扩展?
	应用要求存储的数据不丢失?
	应用需要99.999%高可用?
	应用需要大量的地理位置查询、文本查询?
	如果上述有1个 Yes，可以考虑 MongoDB，2个及以上的 Yes，选择MongoDB绝不会后悔。

4.不适用的场景如下：
	1)要求高度事务性的系统。
	2)传统的商业智能应用。
	3)复杂的跨文档(表)级联查询。

	a.高度事物性的系统:例如银行或会计系统。传统的关系型数据库目前还是更适用于需要大量原子性复杂事务的应用程序。
	b.传统的商业智能应用:针对特定问题的BI数据库会对产生高度优化的查询方式。对于此类应用,数据仓库可能是更合适的选择。
	c.需要SQL的问题。

5.MongoDB提示与局限：大多数是由于MongoDB使用内存映射文件导致的
	1.MongoDB应该运行于64位机器上。32为系统只能对4GB内存做寻址。
	2.数据占用的内存会自动按需分配。这样一来在共享环境中运行数据库会变得更加麻烦。所以最好能让MongoDB运行在一台专门的服务器上。
	3.运行带复制功能的MongoDB是十分重要的，尤其是没有开启Journaling日志的时候。

6.思考MongoDB的使用场景
	重要数据:mysql,一般数据:mongodb,临时数据:memcache
