SpringMVC访问简单的index.jsp 返回404问题

Controller：
    @Controller
    public class HomeController {

        @RequestMapping("/home")
        public String home(){
            return "index";
        }
    }

springmvc-serlvet.xml
   	<context:component-scan base-package="win.linfon.psm.controller"></context:component-scan>

	<mvc:annotation-driven/>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

web.xml
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/spring/applicationContext*.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/spring/springmvc-serlvet.xml</param-value>
    </init-param>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>

浏览器访问http://localhost:8080/index返回404，tomcat信息如下

.web.servlet.DispatcherServlet]-[DEBUG] DispatcherServlet with name 'springmvc' processing GET request for [/index]
.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]-[DEBUG] Looking up handler method for path /index
.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]-[DEBUG] Returning handler method [public java.lang.String win.linfon.psm.controller.HelloController.index()]
.beans.factory.support.DefaultListableBeanFactory]-[DEBUG] Returning cached instance of singleton bean 'helloController'
.web.servlet.DispatcherServlet]-[DEBUG] Last-Modified value for [/index] is: -1
.web.servlet.DispatcherServlet]-[DEBUG] Rendering view [org.springframework.web.servlet.view.JstlView: name 'index'; URL [/WEB-INF/pages/index.jsp]] in DispatcherServlet with name 'springmvc'
.web.servlet.view.JstlView]-[DEBUG] Forwarding to resource [/WEB-INF/pages/index.jsp] in InternalResourceView 'index'
.web.servlet.DispatcherServlet]-[DEBUG] DispatcherServlet with name 'springmvc' processing GET request for [/WEB-INF/pages/index.jsp]
.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]-[DEBUG] Looking up handler method for path /WEB-INF/pages/index.jsp
.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]-[DEBUG] Did not find handler method for [/WEB-INF/pages/index.jsp]
.web.servlet.PageNotFound]-[WARN] No mapping found for HTTP request with URI [/WEB-INF/pages/index.jsp] in DispatcherServlet with name 'springmvc'
.web.servlet.DispatcherServlet]-[DEBUG] Successfully completed request
.web.servlet.DispatcherServlet]-[DEBUG] Successfully completed request


原因:
    拦截的时候用的/*
    这样的话，所有的请求都会被拦截下来,包括第一次index请求进来的时候，返回的/WEB-INF/pages/index.jsp，又被SpringMVC拦截进去访问了一遍，所以才会提示找不到/WEB-INF/pages/index.jsp的handlerMapping
解决方法:
    1.web.xml里的拦截不要用/*,加后缀比如/*.action,这样将不会拦截到.jsp，css,jpg之类的。也可以用/，这样不会拦截到.jsp，会不会拦截到css，jpg没试
        
        <servlet-mapping>
            <servlet-name>springmvc</servlet-name>
            <url-pattern>/*.action</url-pattern>
        </servlet-mapping>

        或

        <servlet-mapping>
            <servlet-name>springmvc</servlet-name>
            <url-pattern>/</url-pattern>
        </servlet-mapping>
        
    2.在servlet.xml里配置，解决拦截静态资源的问题
    	方法1：<mvc:default-servlet-handler />
        方法2：
            <mvc:resources mapping="/resources/**" location="/resources/" />
            <mvc:resources mapping="/views/resources/**" location="/resources/" />
            <mvc:resources mapping="/views/**" location="/views/" />
            <mvc:resources mapping="/template/**" location="/template/" />

            mapping是url请求里的路径，location是资源的位置

问题2：
    在使用时
        <mvc:default-servlet-handler />
    将无法访问到设置在其他位置的.html文件，显示循环视图错误

    在使用时
        <mvc:resources mapping="" location=""/>
    
        mvc:default-servlet-handler似乎无法生效，将会无法方位到之前配置的index.jsp，也会显示循环视图问题。
        只有将index.jsp放置到指定的路径下才能访问到。
    
结论：粗略测试结果，在配置的时候，使用其中一种，然后所有的资源配置也按照其中的一种风格来放置，不能混用。

